UPlayground 프로젝트 종합 분석
프로젝트 개요
UPlayground는 언리얼 엔진 5.4 기반의 RPG 프로젝트로, C++ 20 표준을 사용하고 게임 피쳐 플러그인 시스템을 활용하여 모듈화된 게임 기능을 구현합니다. 모든 사용자 정의 클래스 및 구조체에는 'PG' 접두사를 사용하여 일관성을 유지합니다. 이 프로젝트는 확장성과 재사용성을 높이기 위해 모듈화된 아키텍처와 컴포넌트 기반 시스템을 채택하고 있습니다.
아키텍처와 핵심 시스템
1. 매니저 시스템

UPGManagerSubsystem: 게임 인스턴스 서브시스템으로, 모든 매니저를 관리하고 조정
UPGBaseManager: 모든 매니저의 기본 클래스
IPGManager: 매니저 인터페이스

매니저 시스템은 중앙 집중식으로 게임의 다양한 측면을 관리하며, 매니저 등록 및 해제 메커니즘을 제공합니다. 또한 게임 상태(로딩, 메인 메뉴, 일시정지, 실행 중 등)를 관리하고 상태 전환을 처리합니다. 각 매니저는 특정 게임 상태에서 활성화되거나 비활성화될 수 있습니다.
2. 게임 피쳐 시스템

UPGGameFeatureManagerAction: 게임 피쳐 플러그인 액션 기본 클래스
UPGRPGManagersFeature: RPG 매니저에 특화된 게임 피쳐 구현
PGPlayerSystemFeature: 플레이어 시스템 관련 게임 피쳐
PGUIFeature: UI 시스템 관련 게임 피쳐

게임 피쳐 시스템은 언리얼 엔진의 게임 피쳐 플러그인 기능을 활용하여 모듈식 기능 확장을 구현합니다. 이를 통해 게임의 주요 시스템을 독립적으로 개발하고 통합할 수 있습니다.
3. 캐릭터 시스템

APGBaseCharacter: 모든 캐릭터의 기본 클래스
APGPlayerCharacter: 플레이어 캐릭터 클래스
APGNPC: NPC 캐릭터 클래스
APGPlayerController: 플레이어 컨트롤러 클래스
UPGCharacterMovementComponent: 캐릭터 이동 기능 확장 컴포넌트

캐릭터 시스템은 다양한 캐릭터 상태(대기, 이동, 공격, 시전, 기절, 사망)를 관리하고, 체력 시스템, 상호작용 시스템을 구현합니다. 또한 다양한 컴포넌트(전투, 어빌리티, 인벤토리, 장비)를 통합하여 캐릭터의 기능을 확장합니다.
4. 전투 시스템

UPGCombatComponent: 전투 기능을 담당하는 컴포넌트
UPGAttackData: 공격 데이터 정의 클래스
UPGDamageType: 데미지 타입 정의 클래스
APGProjectile: 투사체 클래스

전투 시스템은 기본 및 보조 공격 기능, 타겟팅 시스템, 전투 스탯(공격력, 방어력, 치명타 확률 등) 관리, 데미지 적용 및 계산, 공격 쿨다운 관리 등의 기능을 제공합니다. 또한 투사체를 통한 원거리 공격도 지원합니다.
5. 어빌리티 시스템

UPGAbilityComponent: 능력 사용을 관리하는 컴포넌트
UPGAbility: 모든 능력의 기본 클래스
UPGMontageAbility: 애니메이션 몽타주를 활용한 능력 클래스
UPGSkillData: 스킬 데이터 정의 클래스

어빌리티 시스템은 능력 등록, 제거, 활성화 기능을 제공하고 다양한 리소스(마나, 스태미나 등)를 관리합니다. 또한 능력 활성화, 종료, 쿨다운 이벤트를 처리하고, 애니메이션 몽타주를 통한 시각적 표현을 지원합니다.
6. 인벤토리 시스템

UPGInventoryManager: 아이템 관리 총괄
UPGInventoryComponent: 인벤토리 컴포넌트
UPGItem: 아이템 기본 클래스
UPGItemManager: 아이템 생성 및 관리

인벤토리 시스템은 아이템 추가/제거/확인 기능, 인벤토리 용량 관리, 다양한 아이템 타입(기타, 소비품, 장비, 퀘스트) 및 희귀도(일반, 고급, 희귀, 에픽, 전설) 분류를 지원합니다. 또한 자동 저장 메커니즘을 포함하고 있습니다.
7. 장비 시스템

UPGEquipmentComponent: 장비 관리 컴포넌트
UPGEquipmentItem: 장비 아이템 클래스
UPGEquipmentVisualizerComponent: 장비 시각화 컴포넌트
FPGEquipmentStats: 장비 스탯 구조체

장비 시스템은 아이템 장착 및 해제 기능, 장비 슬롯별 관리, 장비 통합 스탯 계산, 장비 염색 시스템 등을 지원합니다. 또한 장비의 시각적 표현을 관리하여 캐릭터의 외형이 장착한 장비에 따라 변화하도록 합니다.
8. 퀘스트 시스템

UPGQuestManager: 퀘스트 진행 및 상태 관리
다양한 퀘스트 타입: 메인, 사이드, 일일, 월드, 숨겨진 퀘스트 등
다양한 퀘스트 목표: 적 처치, 아이템 수집, 상호작용, 에스코트, 장소 도달 등
퀘스트 보상 시스템: 아이템, 통화, 경험치, 평판, 스킬 등

퀘스트 시스템은 퀘스트 시작, 완료, 실패, 포기 관리, 퀘스트 목표 진행 추적, 시간 제한 퀘스트 지원 등의 기능을 제공합니다. 또한 퀘스트 상태 변경, 목표 업데이트 및 완료에 대한 이벤트 시스템과 자동 저장 기능을 포함합니다.
9. 카메라 시스템

UPGCameraSystem: 카메라 관리 컴포넌트
다양한 카메라 모드: 1인칭, 3인칭, 자유 시점
카메라 기능: 줌, 이동, 회전 등

카메라 시스템은 다양한 카메라 모드를 지원하고, 모드별 전환 및 설정을 관리합니다. 또한 카메라 줌, 이동, 회전 기능을 제공하여 플레이어가 게임 세계를 다양한 시점에서 볼 수 있도록 합니다.
10. UI/HUD 시스템

UPGUIManager: UI 시스템 전반 관리
UPGHUDManager: HUD 요소 관리
IPGIUIManager: UI 시스템 인터페이스
UPGWidgetBase: UI 위젯 기본 클래스
UPGWindow: 창 형태의 UI 위젯
UPGPopup: 팝업 형태의 UI 위젯
UPGHUDComponent: HUD 컴포넌트

UI/HUD 시스템은 게임 내 모든 UI 요소를 관리하고, HUD 요소의 등록 및 가시성을 제어합니다. 또한 게임 모드에 따라 UI를 업데이트하고, 다양한 UI 컴포넌트(창, 팝업, 리스트 등)를 제공합니다.
11. 입력 시스템

UPGEnhancedInputComponent: EnhancedInput 기반 입력 컴포넌트
UPGInputConfig: 입력 설정 관리 클래스
다양한 입력 액션 및 컨텍스트: 카메라 전환, 줌, 이동, 회전 등

입력 시스템은 언리얼 엔진의 EnhancedInput 시스템을 활용하여 다양한 입력을 처리합니다. 또한 입력 액션 및 컨텍스트를 통해 유연한 입력 처리를 가능하게 합니다.
12. 저장 시스템

UPGSaveManager: 게임 저장 관리
UPGSaveGame: 저장 데이터 클래스
UPGSaveTypes: 저장 관련 데이터 타입
UI/Save: 저장 메뉴 및 슬롯 UI 위젯

저장 시스템은 게임 진행 상황을 저장하고 로드하는 기능을 제공합니다. 또한 자동 저장 기능과 사용자가 직접 저장할 수 있는 UI 인터페이스를 제공합니다.
기술적 특징
1. 모듈화된 구조
프로젝트는 각 시스템이 독립적으로 동작하면서도 매니저 시스템을 통해 통합되는 모듈화된 구조를 가지고 있습니다. 이는 코드의 유지보수성과 확장성을 향상시킵니다.
2. 컴포넌트 기반 설계
게임의 주요 기능들은 컴포넌트로 구현되어 필요에 따라 액터에 추가될 수 있습니다. 이는 언리얼 엔진의 컴포넌트 기반 아키텍처와 잘 맞는 설계입니다.
3. 인터페이스 활용
여러 시스템에서 인터페이스를 활용하여 구현과 인터페이스를 분리하고, 다형성을 통한 유연한 확장을 지원합니다.
4. 이벤트 기반 통신
델리게이트(Delegate)를 활용한 이벤트 기반 통신을 통해 시스템 간의 결합도를 낮추고, 유연한 통신 방식을 제공합니다.
5. C++ 20 표준 사용
최신 C++ 기능을 활용하여 코드의 효율성과 표현력을 향상시킵니다.
6. 언리얼 엔진 5.4 기능 활용
언리얼 엔진 5.4의 다양한 기능(게임 피쳐 플러그인, EnhancedInput, CommonUI 등)을 활용하여 게임 개발을 효율화합니다.
7. 게임 상태 관리
게임의 다양한 상태(로딩, 메인 메뉴, 게임 실행, 대화, 인벤토리 등)를 명확히 정의하고 관리하여 상태 전환에 따른 시스템 활성화/비활성화를 체계적으로 처리합니다.

확장성 및 미래 개발 가능성
UPlayground 프로젝트는 현재 RPG 게임에 필요한 대부분의 핵심 시스템을 구현하고 있으며, 모듈화된 설계를 통해 쉽게 확장할 수 있는 구조를 가지고 있습니다. 향후 다음과 같은 방향으로 확장이 가능합니다:

대화 시스템 구현: 현재 대화 시스템을 위한 디렉토리 구조는 있지만 구현은 없습니다. NPC와의 대화, 선택지, 대화 트리 등을 구현할 수 있습니다.
퀘스트 시스템 고도화: 현재 기본적인 퀘스트 시스템이 구현되어 있지만, 더 복잡한 퀘스트 구조와 상호 의존성, 선택에 따른 분기 등을 추가할 수 있습니다.
캐릭터 성장 시스템 확장: 레벨링, 스킬 트리, 특성, 직업 등 캐릭터 성장과 관련된 시스템을 추가할 수 있습니다.
상점 및 경제 시스템: 상점, 거래, 경매, 통화 시스템 등을 추가하여 게임 내 경제를 구현할 수 있습니다.
다중 플레이어 지원: 현재의 구조를 확장하여 협력 플레이, PvP, 길드 시스템 등의 다중 플레이어 기능을 추가할 수 있습니다.
오픈 월드 요소: 동적 이벤트, 날씨 시스템, 시간 시스템 등 오픈 월드 게임에 필요한 요소들을 추가할 수 있습니다.

UPlayground 프로젝트는 견고한 기반 구조 위에 다양한 RPG 요소를 구현할 수 있는 확장성을 갖추고 있어, 복잡하고 다양한 기능을 가진 RPG 게임으로 발전시킬 수 있는 잠재력을 가지고 있습니다.